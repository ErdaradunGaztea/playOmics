# works for models that have parameters to tune
# (in case of log reg this would be: "penalty", "mixture")
log_workflow_parameters <- function(workflow) {
  spec <- workflows::pull_workflow_spec(workflow)
  parameter_names <- names(spec$args)
  parameter_values <- lapply(spec$args, rlang::get_expr)
  for (i in seq_along(spec$args)) {
    parameter_name <- parameter_names[[i]]
    parameter_value <- parameter_values[[i]]
    if (!is.null(parameter_value)) {
      mlflow_log_param(parameter_name, parameter_value)
    }
  }
  workflow
}

# works for non-resampled data
# log_metrics <- function(metrics, estimator = "standard") {
#   metrics %>% filter(.estimator == estimator) %>% pmap(
#     function(.metric, .estimator, .estimate) {
#       mlflow_log_metric(.metric, .estimate)
#     }
#   )
#   metrics
# }

log_metrics <- function(metrics) {
  parameter_names <- names(metrics)
  parameter_values <- lapply(metrics, rlang::get_expr)
  for (i in seq_along(metrics)) {
    parameter_name <- parameter_names[[i]]
    parameter_value <- parameter_values[[i]]
    if (!is.null(parameter_value)) {
      mlflow_log_metric(parameter_name, parameter_value)
    }
  }
  metrics
}

# crated_model <- carrier::crate(
#   function(x) workflows:::predict.workflow(fitted_model, x),
#   fitted_model = fitted_model
# )
